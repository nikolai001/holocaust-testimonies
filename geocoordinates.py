import pandas as pdfrom geopy.geocoders import Nominatimfrom tqdm import tqdm# Load data from the CSV file with camp namesfirst_csv = 'testimonies.csv'df = pd.read_csv(first_csv)# Func() that gets Geo-coords From a specific df, and specific column, and adds new column(s) to the csv with Long and Latdef Get_Geo_Coordinates(df, column_name):# Create a geocoding object    geolocator = Nominatim(user_agent="my_geocoder")    # Determine the maximum number of elements in a row in the 'camps' column    max_elements = df[column_name].apply(lambda x: len(str(x).split(','))).max()    # Add new columns for latitude and longitude for each camp element    for i in range(1, max_elements + 1):        df[f'{column_name}{i}latitude'] = None        df[f'{column_name}{i}longitude'] = None    # Cache dictionary to store geocoding results    geocode_cache = {}    # Use tqdm to create a progress bar for the loop    for index, element_names in tqdm(enumerate(df[column_name]), total=len(df), desc="Geocoding Progress"):        # Check if the element_names is a string        if isinstance(element_names, str):            # Split the camp names using ',' as a delimiter            elements = element_names.split(',')            for i, element in enumerate(elements, start=1):                # Check the cache before making a new geocoding request                if element in geocode_cache:                    latitude, longitude = geocode_cache[element]                else:                    # Brug geokoderen til at få koordinaterne for stedsbetegnelsen                    geo_location = geolocator.geocode(element.strip(), timeout=5)                    # Tilføj markør til kortet, hvis koordinater blev fundet                    if geo_location:                        latitude, longitude = geo_location.latitude, geo_location.longitude                        geocode_cache[element] = (latitude, longitude)  # Store result in cache                    else:                        latitude, longitude = None, None  # No result found                # Tilføj latitude og longitude til separate columns in DataFrame                df.at[index, f'{column_name}{i}latitude'] = latitude                df.at[index, f'{column_name}{i}longitude'] = longitude        else:            # Handle the case where the element_names is not a string            for i in range(1, max_elements + 1):                df.at[index, f'{column_name}{i}latitude'] = None                df.at[index, f'{column_name}{i}longitude'] = None    return dfdf = Get_Geo_Coordinates(df, 'place_of_birth')df = Get_Geo_Coordinates(df, 'ghetto')df = Get_Geo_Coordinates(df, 'camps')# Save DataFrame with coordinates to a new CSV fileoutput_csv_path = 'geoplots.csv'df.to_csv(output_csv_path, index=False)