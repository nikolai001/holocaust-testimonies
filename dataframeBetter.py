import pandas as pdimport os# Load data# df_location = pd.read_csv('Uber_cache_geocodes.csv')df_protocol = pd.read_csv('testimonies_clean.csv')# Drop NaN values in the 'place_of_birth' columndf_protocol_cleaned = df_protocol.dropna(subset=['place_of_birth'])# Split and explode the 'place_of_birth' columnplace_of_birth_df = df_protocol_cleaned['place_of_birth'].str.split(',').explode().str.strip()# Count the occurrences of each elementplace_of_birth_frequency = place_of_birth_df.value_counts().reset_index()place_of_birth_frequency.columns = ['Place', 'frequency']# Drop NaN values in the 'ghetto' columndf_protocol_cleaned = df_protocol.dropna(subset=['ghetto'])# Split and explode the 'ghetto' columnghetto_df = df_protocol_cleaned['ghetto'].str.split(',').explode().str.strip()# Count the occurrences of each elementghetto_frequency = ghetto_df.value_counts().reset_index()ghetto_frequency.columns = ['Place', 'frequency']# Drop NaN values in the 'camps' columndf_protocol_cleaned = df_protocol.dropna(subset=['camps'])# Split and explode the 'camps' columncamps_df = df_protocol_cleaned['camps'].str.split(',').explode().str.strip()# Count the occurrences of each elementcamps_frequency = camps_df.value_counts().reset_index()camps_frequency.columns = ['Place', 'frequency']# load in GeoCoordinates data:Geocode_df = pd.read_csv('Uber_cache_geocodes.csv')# Perform an outer merge on the 'Place' columnmerged_df = pd.merge(place_of_birth_frequency, ghetto_frequency, on='Place', how='outer')merged_df = pd.merge(merged_df, camps_frequency, on='Place', how='outer')merged_df = pd.merge(merged_df, Geocode_df, on='Place', how='outer')# rename columns:merged_df = merged_df.rename(columns={'frequency_x': 'place_of_birth',                                        'frequency_y': 'ghetto',                                        'frequency': 'camps'})# remove NaN valuesmerged_df = merged_df.dropna(subset=['Longitude'])#Make NaN values 0 so we can calculate a total_freqmerged_df = merged_df.fillna(0)merged_df['total_freq'] = merged_df['place_of_birth'] + merged_df['ghetto' ] + merged_df['camps']# check which value is bigger in each of the freq column to determine the place type:merged_df['place_type'] = merged_df[['place_of_birth', 'ghetto', 'camps']].idxmax(axis=1)# # Print the final merged data frame# print(place_of_birth_frequency)# print(ghetto_frequency)# print(camps_frequency)print(merged_df)merged_df.to_csv('final_df.csv', index=False)